I"˜<figure>
	<img src="/images/posts/002-printing-source-code-mac-osx/terminal.png" alt="Terminal executing the Command" />
	<figcaption>Terminal to Execute the Command</figcaption>
</figure>

<p>Almost all the time, I need to print out the syntax of a project, during development or as reference, for my screencasts, I always end up printing it from Microsoft Word or Pages, sans the beautiful syntax highlighting. The lightweight text editors like <a href="https://www.sublimetext.com/">Sublime Text 2</a> doesnâ€™t support printing right now, and <a href="https://macromates.com/">TextMate</a> or <a href="https://panic.com/coda/">Coda</a>, in my opinion, doesnâ€™t produce much beautiful result.</p>

<p>But, to my rescue, I recently discovered this nice program called <a href="http://linux.die.net/man/1/enscript">enscript</a>. The program is capable of probably doing a lot of good things, but in my case, I use it now, to produce a PostScript file with printed code.</p>

<p>In Mac OS X it can be installed using brew:</p>

<pre>
<code class="language-powershell">brew install enscript</code>
</pre>

<p>So, here is a good example using encsript :</p>

<figure class="highlight"><pre><code class="language-powershell" data-lang="powershell"><span class="nf">enscript</span><span class="w"> </span><span class="nt">-1rG</span><span class="w"> </span><span class="nt">--line-numbers</span><span class="w"> </span><span class="nt">-p</span><span class="w"> </span><span class="nf">-</span><span class="w"> </span><span class="nx">\</span><span class="w">
  </span><span class="nt">--highlight</span><span class="o">=</span><span class="nf">javascript</span><span class="w"> </span><span class="nt">--color</span><span class="o">=</span><span class="mi">1</span><span class="w"> </span><span class="nt">-c</span><span class="w"> </span><span class="nf">script.js</span><span class="w"> </span><span class="err">&gt;</span><span class="w"> </span><span class="nx">~/script.ps</span><span class="w"> </span><span class="nx">\</span><span class="w">
  </span><span class="o">&amp;&amp;</span><span class="w"> </span><span class="nf">open</span><span class="w"> </span><span class="nx">~/script.ps</span></code></pre></figure>

<p>Everything is pretty clear, but</p>

<ul>
  <li><strong>1</strong> is for printing one page per sheet</li>
  <li><strong>r</strong> is for album mode, remove it to print for usual book mode</li>
  <li><strong>p</strong> is for producing ps output, after that it piped to file ~/out.ps</li>
  <li><strong>color=0</strong> for black/white mode</li>
  <li><strong>color=1</strong> for colored mode</li>
  <li><strong>c</strong> is for cutting lines, if they are bigger than the actual width of a sheet. There is also â€“word-wrap option</li>
</ul>

<p>Another example with automatic conversion to pdf using <code>ps2pdf</code> :</p>

<figure class="highlight"><pre><code class="language-powershell" data-lang="powershell"><span class="nf">enscript</span><span class="w"> </span><span class="nt">-1G</span><span class="w"> </span><span class="nt">--line-numbers</span><span class="w"> </span><span class="nt">-p</span><span class="w"> </span><span class="nf">-</span><span class="w"> </span><span class="nx">\</span><span class="w">
  </span><span class="nt">--word-wrap</span><span class="w"> </span><span class="nt">-f</span><span class="w"> </span><span class="nx">Leon\</span><span class="w"> </span><span class="nx">Regular</span><span class="w"> </span><span class="nt">--highlight</span><span class="o">=</span><span class="nf">javascript</span><span class="w"> </span><span class="nt">--color</span><span class="o">=</span><span class="mi">1</span><span class="w"> </span><span class="nf">script.js</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="nf">\</span><span class="w">
  </span><span class="nf">pstopdf</span><span class="w"> </span><span class="nt">-i</span><span class="w"> </span><span class="nt">-o</span><span class="w"> </span><span class="nx">script.pdf</span><span class="w"> </span><span class="o">&amp;&amp;</span><span class="w"> </span><span class="nx">open</span><span class="w"> </span><span class="nx">script.pdf</span></code></pre></figure>

<p>In conclusion, if you need your <code>code files printed</code> (ruby, perl, html, js, c#), you can easily use this method to print them. Also, some automated scripts could be set up, to make the process simplified.</p>

<p>Simple problem, simple solution.</p>
:ET